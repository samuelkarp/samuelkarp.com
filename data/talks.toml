name = "Talks"

[[talk]]
title        = "What's going on in the containerd neighborhood"
date         = "November 15, 2024 at 2:55 PM"
conference   = "KubeCon + CloudNativeCon North America"
conf_year    = "2024"
co_speaker   = "Kirtana Ashok, Michael Brown, Phil Estes, and Akihiro Suda"
catalog_link = "https://kccncna2024.sched.com/event/1hoyS/whats-going-on-in-the-containerd-neighborhood-phil-estes-aws-samuel-karp-google-akihiro-suda-ntt-michael-brown-ibm-kirtana-ashok-microsoft"
abstract     = """
Our recent maintainer sessions have covered the soon-to-launch containerd v2.0.
During this session led by maintainers we will give a brief update on 2.0, but
will spend more time looking at the ecosystem around us. Why does containerd
exist? What value does it bring to the overall cloud native world? How are
other projects using it to build and extend containerd in useful ways? We’ll
spend some time on containerd’s largest subproject, nerdctl, which also has an
upcoming 2.0 release, and additionally catch the community up on activity in
our Rust subproject ecosystem, the runwasi containerd shim, and lazy loading
snapshotters. Since this is KubeCon, we’ll also provide an update on CRI
changes and KEP-driven additions around NRI, DRA, and checkpoint/restore.
Attendees will leave with a broad view of the larger containerd ecosystem of
projects as well as key information on how to get involved if you are
interested to help and contribute in any way to the “containerd neighborhood!”
"""

[[talk]]
title        = "What containerd 2.0 means for you"
date         = "November 15, 2024 at 11:55 AM"
conference   = "KubeCon + CloudNativeCon North America"
conf_year    = "2024"
catalog_link = "https://kccncna2024.sched.com/event/1i7qL/what-containerd-20-means-for-you-samuel-karp-google"
abstract     = """
containerd 2.0 is the first major new version of containerd since 1.0.0 was
released in 2017. This new version of containerd introduces new features, new
extension points, and new backends for image operations and CRI with the goal
of increased flexibility and better efficiency for certain types of workloads.
containerd 2.0 also removes some previously-deprecated features in favor of
modern replacements. This talk will discuss how to prepare for containerd 2.0
in your production environments, including strategies for incorporating
containerd 2.0's new functionality and detecting/remediating any impact of
removed features prior to upgrading.
"""

[[talk]]
title        = "containerd: Project Update and Deep Dive"
date         = "April 20, 2023 at 5:25 PM"
conference   = "KubeCon + CloudNativeCon Europe"
conf_year    = "2023"
co_speaker   = "Maksym Pavlenko"
catalog_link = "https://kccnceu2023.sched.com/event/1HyUG/containerd-project-update-and-deep-dive-maksym-pavlenko-apple-samuel-karp-google"
speakerdeck  = "https://speakerdeck.com/samuelkarp/containerd-project-update-and-deep-dive-kubecon-plus-cloudnativecon-eu-2023"
youtube      = "https://www.youtube.com/watch?v=a1-9lIZszVU"
abstract     = """
Join containerd maintainers for an introduction and deep dive into the latest
updates on containerd. For Kubernetes users, we will cover how to get started
and configure containerd. We'll then dive into the exciting work going on in
the containerd ecosystem. In 1.7, exciting new experimental features like the
Sandbox API bring the ability to better-model non-traditional runtime
environments while the Transfer Service builds a new model of extensibility
for image operations. 2.0 is around the corner, and will bring stability to
the new features and form a strong base for long-term maintenance through the
removal of deprecated functionality. The ecosystem is vibrant and expanding,
with subprojects of containerd (nerdctl, wasm, some snapshotters) and as
vendor- or community-driven projects for image streaming, developer experience,
and new OS platforms. Rust has made its appearance in the containerd ecosystem
too, with a new non-core library to build Rust-based shims. 
"""

[[talk]]
title        = "Keeping your host operating system secure with Bottlerocket"
date         = "December 3, 2021 at 9:15 AM"
conference   = "AWS re:Invent"
conf_year    = "2021"
co_speaker   = "Vaishnavi Venkatesan"
talk_id      = "CON320"
abstract     = """
Bottlerocket is an open-source, minimal, Linux-based, container-optimized
operating system that is purpose built to host container workloads. It only
includes tools needed to run containers, significantly reducing the attack
surface and impact of vulnerabilities. This chalk talk demonstrates many aspects
of Bottlerocket, including how you can restrict container privileges and limit
access to host-level entities, such as sockets and block devices. Learn how
Bottlerocket blocks configurations that are designed to exploit vulnerabilities,
keeping your host operating system secure.
"""


[[talk]]
title        = "Getting started as a Bottlerocket contributor"
date         = "November 30, 2021 at 11:45 AM"
conference   = "AWS re:Invent"
conf_year    = "2021"
co_speaker   = "Curtis Rissi"
talk_id      = "OPN206"
abstract     = """
Bottlerocket is a minimal, secure, Linux-based, container-optimized operating
system. It is an open-source system, and its developers love collaborating with
their contributors. In this chalk talk, explore how you can start contributing
to Bottlerocket, learn how you can use developer tooling to build and test a
potential contribution, and hear some examples of developer interactions with
contributors.
"""

[[talk]]
title        = "Linux Container Primitives"
date         = "Online"
conference   = "LinuxFest Northwest"
conf_year    = "2020"
catalog_link = "https://www.linuxfestnorthwest.org/conferences/2020/program/proposals/358"
speakerdeck  = "https://speakerdeck.com/samuelkarp/linux-container-primitives-cgroups-namespaces-and-more-linuxfest-northwest-2020"
youtube      = "https://www.youtube.com/watch?v=x1npPrzyKfs"
abstract     = """
In this session, we’ll explore the different Linux primitives that are
commonly used in implementing container runtimes. We’ll learn about the Linux
primitives that underlie container runtimes like Docker, including cgroups,
namespaces, and union filesystems. We’ll see how Docker uses these
primitives, and how the OCI standard makes it possible to customize how your
containers run. We’ll also discuss alternative container runtimes like CRI-O,
rkt, and systemd-nspawn and what makes them different. This will be an
interactive session with a live demo and open questions.

This session is a repeat of the session from last year.
"""
[[talk.link]]
title = "Online Q&A"
icon = "comments"
href = "https://discuss.lfnw.org/t/linux-container-primitives/177"


[[talk]]
title        = "Extending containerd"
date         = "March 6, 2020 at 2:00 PM"
conference   = "SCALE"
conf_year    = "18x"
catalog_link = "https://www.socallinuxexpo.org/scale/18x/presentations/extending-containerd"
speakerdeck  = "https://speakerdeck.com/samuelkarp/extending-containerd-scale-18x"
youtube      = "https://www.youtube.com/watch?v=zI2kZwZYXyY"
abstract     = """
containerd, a graduated CNCF project, is a widely used container runtime that
provides core functionality for Docker. containerd was designed to be small and
simple, but also very modular and extensible. This talk covers the architecture
of containerd, explains the responsibilities of each component, and dives deep
into containerd’s facility for extension. We’ll cover the individual gRPC
services that make up containerd and show how they can be extended with proxy
plugins, Go plugins, process interfaces (OCI runtimes and process-based
logging), thick client implementations, and build-your-own containerd for
compiled-in extension. These extension mechanisms can be shown with simple
examples and real-world use in the firecracker-containerd project.
"""
[[talk.link]]
title = "View demo script"
icon = "github"
href = "https://github.com/samuelkarp/firecracker-containerd-demo-ami/blob/master/scale.sh"

[[talk]]
title        = "Deep Dive into firecracker-containerd"
date         = "December 2, 2019 at 12:15 PM and December 3, 2019 at 4:45 PM"
conference   = "AWS re:Invent"
conf_year    = "2019"
track        = "containers"
talk_id      = "CON408"
catalog_link = "https://www.portal.reinvent.awsevents.com/connect/sessionDetail.ww?SESSION_ID=98138"
speakerdeck  = "https://speakerdeck.com/samuelkarp/deep-dive-into-firecracker-containerd-re-invent-2019-con408"
abstract     = """
Last year, we released the Firecracker virtual machine monitor (VMM) built on
top of the Linux KVM subsystem, which is optimized for lightweight,
container-like “microVMs.” In this session, we dive deep into the
architecture of the firecracker-containerd project, which aims to allow
portability between standard OCI container images and the larger container
ecosystem with Firecracker microVMs. Topics covered include the standard
containerd architecture with the reference OCI runtime (runc), challenges
adapting containers into microVMs, and the firecracker-containerd suite.
"""
[[talk.link]]
title = "View demo script"
icon = "github"
href = "https://github.com/samuelkarp/firecracker-containerd-demo-ami/blob/master/reinvent.sh"

[[talk]]
title        = "Extending containerd"
date         = "November 19, 2019 at 4:25 PM"
conference   = "KubeCon + CloudNativeCon North America"
conf_year    = "2019"
track        = "Runtimes"
co_speaker   = "Maksym Pavlenko"
catalog_link = "https://kccncna19.sched.com/event/a62aa4ea00415ddc40e1d6a491c1524f"
speakerdeck  = "https://speakerdeck.com/samuelkarp/cloudnativecon-na-2019"
youtube      = "https://www.youtube.com/watch?v=9avPJL9Zqso"
abstract = """
containerd, a graduated CNCF project, is a widely used container runtime that
provides core functionality for Docker. containerd was designed to be small and
simple, but also very modular and extensible. This talk covers the architecture
of containerd, explains the responsibilities of each component, and dives deep
into containerd’s facility for extension. We’ll cover the individual gRPC
services that make up containerd and show how they can be extended with proxy
plugins, Go plugins, process interfaces (OCI runtimes and process-based
logging), thick client implementations, and build-your-own containerd for
compiled-in extension. These extension mechanisms can be shown with simple
examples and real-world use in the firecracker-containerd project.
"""
[[talk.link]]
title = "View demo script"
icon = "github"
href = "https://github.com/samuelkarp/firecracker-containerd-demo-ami/blob/master/kubecon.sh"

[[talk]]
title        = "Deep Dive into firecracker-containerd"
date         = "April 30, 2019 at 12:00 PM"
conference   = "DockerCon"
conf_year    = "2019"
track        = "open source"
talk_id      = "281969"
catalog_link = "https://dockercon19.smarteventscloud.com/connect/sessionDetail.ww?SESSION_ID=281969"
speakerdeck  = "https://speakerdeck.com/samuelkarp/deep-dive-into-firecracker-containerd-dockercon-2019"
youtube      = "https://www.youtube.com/watch?v=0wEiizErKZw"
abstract = """
Amazon Web Services recently released the Firecracker Virtual Machine Monitor
(VMM) built on top of the Linux KVM subsystem, which is optimized for
lightweight, container-like "microVMs". This session dives deep into the
architecture of the firecracker-containerd project, which aims to allow
portability between standard OCI container images and the larger container
ecosystem with Firecracker microVMs. Topics covered will include the standard
containerd architecture with the reference OCI runtime (runc), challenges
adapting containers into microVMs, and the firecracker-containerd suite.
"""
[[talk.link]]
title = "View recording on Docker.com"
icon  = "play-circle"
href  = "https://www.docker.com/dockercon/2019-videos?watch=deep-dive-into-firecracker-containerd"


[[talk]]
title        = "Deep Dive into firecracker-containerd"
date         = "April 28, 2019"
conference   = "LinuxFest Northwest"
conf_year    = "2019"
track        = "Containerization"
co_speaker   = "Noah Meyerhans"
speakerdeck  = "https://speakerdeck.com/samuelkarp/deep-dive-into-firecracker-containerd-linuxfest-northwest-2019"
youtube      = "https://www.youtube.com/watch?v=C-9XDdRU-kU"
abstract = """
Amazon Web Services recently released the Firecracker Virtual Machine Monitor
(VMM) built on top of the Linux KVM subsystem, which is optimized for
lightweight, container-like "microVMs". This session dives deep into the
architecture of the firecracker-containerd project, which aims to allow
portability between standard OCI container images and the larger container
ecosystem with Firecracker microVMs. Topics covered will include the standard
containerd architecture with the reference OCI runtime (runc), challenges
adapting containers into microVMs, and the firecracker-containerd suite.
"""

[[talk]]
title       = "Linux Container Primitives"
date        = "April 27, 2019"
conference  = "LinuxFest Northwest"
conf_year   = "2019"
track       = "Containerization"
speakerdeck = "https://speakerdeck.com/samuelkarp/linux-container-primitives-cgroups-namespaces-and-more-linuxfest-northwest-2019"
youtube     = "https://www.youtube.com/watch?v=Ueu8TuW-IOg"
abstract = """
In this session, we'll explore the different Linux primitives that are commonly
used in implementing container runtimes. We'll learn about the Linux primitives
that underlie container runtimes like Docker, including cgroups, namespaces,
and union filesystems. We'll see how Docker uses these primitives, and how the
OCI standard makes it possible to customize how your containers run. We'll also
discuss alternative container runtimes like CRI-O, rkt, and systemd-nspawn and
what makes them different. This will be an interactive session with a live demo
and open questions.
"""

[[talk]]
title       = "Linux Container Primitives and Runtimes"
date        = "November 26 and November 27, 2018"
conference  = "AWS re:Invent"
conf_year   = "2018"
track       = "containers"
talk_id     = "CON407"
slideshare  = "https://www.slideshare.net/AmazonWebServices/linux-container-primitives-and-runtimes-con407r1-aws-reinvent-2018"
speakerdeck = "https://speakerdeck.com/samuelkarp/linux-container-primitives-and-runtimes-re-invent-2018-con407"
abstract = """
In this session, we'll explore the different Linux primitives that are commonly
used in implementing container runtimes. Starting with Docker containers and
moving down through the stack, we'll cover containerd, runc, and the underlying
Linux primitives like cgroups, namespaces, and union filesystems. We'll also
discuss alternative container runtimes like CRI-O, rkt, and systemd-nspawn and
what makes them different. This will be an interactive session with a live demo
and open questions.
"""

[[talk]]
title       = "Windows Containers on Amazon ECS"
date        = "November 28, 2017"
conference  = "AWS re:Invent"
conf_year   = "2017"
track       = "containers"
talk_id     = "CON324"
speakerdeck = "https://speakerdeck.com/samuelkarp/windows-containers-on-amazon-ecs-re-invent-2017-con324"
abstract    = """
Docker containers are commonly regarded as powerful and portable runtime
environments for Linux code, but Docker also offers support for running Windows
Server applications in containers.

In this talk, we'll discuss what containers are and why you'd use them, how they
work on Windows, and how Windows containers compare to Linux containers.
"""
